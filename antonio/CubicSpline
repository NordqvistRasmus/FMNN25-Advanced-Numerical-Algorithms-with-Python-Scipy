import numpy
import matplotlib.pyplot

class CubicSpline(object):

    def __init__(self,deBoorPoints,KnotSeq):

        self.deBoorPoints = deBoorPoints
        self.KnotSeq = KnotSeq

    def __call__(self,u):

        self.u = u        
        self.s_u = self.deBoorsAlgo(u)
        
        return self.s_u
  
    def deBoorsAlgo(self,u):

        
        xVal = numpy.zeros(len(u))

        yVal = numpy.zeros(len(u))
 
        
        for i in range(0,len(u)):

            index = self.FirstIndex(u[i])
        
            xVal[i] = self.Blossom(u[i],3,index,0)

            yVal[i] = self.Blossom(u[i],3,index,1)
          
        return numpy.array([xVal,yVal])

    def Blossom(self,x, rank, i,xy):
        if rank == 0:
            return self.deBoorPoints[i-2,xy]
        if self.KnotSeq[i+1] == self.KnotSeq[i+rank-3]:
            dleft = 0
        else:
            alfa=(self.KnotSeq[i+1] - x)/(self.KnotSeq[i+1] - self.KnotSeq[i+rank-3])
            dleft = alfa * self.Blossom(x, rank-1, i,xy)
        if self.KnotSeq[i+1] == self.KnotSeq[i+rank-3]:
              dright = 0
        else:
            alfa=(self.KnotSeq[i+1] - x)/(self.KnotSeq[i+1] - self.KnotSeq[i+rank-3])
            dright = (1-alfa)* self.Blossom(x, rank-1, i+1,xy)
        return dleft + dright
        

    def FirstIndex(self,u):

        return (self.KnotSeq > u).argmax()-1
 

    def plot(self):
        
        
        xValues = self.s_u[0]
        
        yValues = self.s_u[1]
        matplotlib.pyplot.figure()
        
        matplotlib.pyplot.plot(xValues,yValues,'k')
        
        matplotlib.pyplot.plot(self.deBoorPoints[:,0],self.deBoorPoints[:,1],'r--')
        matplotlib.pyplot.show()
        

def main():
   
    deBoorPoints = numpy.array([(-12.73564, 9.03455),
                                (-26.77725, 15.89208),
                                (-42.12487, 20.57261),
                                (-15.34799, 4.57169),
                                (-31.72987, 6.85753),
                                (-49.14568, 6.85754),
                                (-38.09753, -1e-05),
                                (-67.92234, -11.10268),
                                (-89.47453, -33.30804),
                                (-21.44344, -22.31416),
                                (-32.16513, -53.33632),
                                (-32.16511, -93.06657),
                                (-2e-05, -39.83887),
                                (10.72167, -70.86103),
                                (32.16511, -93.06658),
                                (21.55219, -22.31397),
                                (51.377, -33.47106),
                                (89.47453, -33.47131),
                                (15.89191, 0.00025),
                                (30.9676, 1.95954),
                                (45.22709, 5.87789),
                                (14.36797, 3.91883),
                                (27.59321, 9.68786),
                                (39.67575, 17.30712)])

    KnotSeq = numpy.linspace(0, 1, 26)
    KnotSeq[ 1] = KnotSeq[ 2] = KnotSeq[ 0]
    KnotSeq[-3] = KnotSeq[-2] = KnotSeq[-1]
    u = numpy.linspace(0,0.999,1000)

    Values = CubicSpline(deBoorPoints,KnotSeq)

    Values(u)

    Values.plot()


main()




